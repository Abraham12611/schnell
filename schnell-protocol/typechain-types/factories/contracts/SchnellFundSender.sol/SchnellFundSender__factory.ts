/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  SchnellFundSender,
  SchnellFundSenderInterface,
} from "../../../contracts/SchnellFundSender.sol/SchnellFundSender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_initialL2StandardBridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    inputs: [],
    name: "ReentrancyGuardReentrantCall",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SafeERC20FailedOperation",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FundsSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l1Token",
        type: "address",
      },
    ],
    name: "L1TokenCounterpartSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    name: "L2StandardBridgeSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SupportedTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "SupportedTokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "l2Token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l1Recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "l2Sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "l1Token",
        type: "bytes",
      },
    ],
    name: "WithdrawalInitiatedOnL2",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "addSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_l2Token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_l1Recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "_minGasLimit",
        type: "uint32",
      },
      {
        internalType: "bytes",
        name: "_extraData",
        type: "bytes",
      },
    ],
    name: "initiateWithdrawalToL1",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "l1TokenCounterpart",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "l2StandardBridge",
    outputs: [
      {
        internalType: "contract IL2StandardBridge",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
    ],
    name: "removeSupportedToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "sendFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_bridgeAddress",
        type: "address",
      },
    ],
    name: "setL2StandardBridge",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "supportedTokens",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContract",
        type: "address",
      },
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdrawERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_to",
        type: "address",
      },
    ],
    name: "withdrawEther",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002013380380620020138339818101604052810190620000379190620002f1565b33600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603620000ad5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401620000a4919062000334565b60405180910390fd5b620000be81620001c360201b60201c565b5060018081905550600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160362000138576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016200012f90620003b2565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fa23a9d2188a7c0fed451a9fba07766700a713518c306b47bd7965da8d795902e60405160405180910390a250620003d4565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002b9826200028c565b9050919050565b620002cb81620002ac565b8114620002d757600080fd5b50565b600081519050620002eb81620002c0565b92915050565b6000602082840312156200030a576200030962000287565b5b60006200031a84828501620002da565b91505092915050565b6200032e81620002ac565b82525050565b60006020820190506200034b600083018462000323565b92915050565b600082825260208201905092915050565b7f42726964676520616464726573732063616e6e6f74206265207a65726f000000600082015250565b60006200039a601d8362000351565b9150620003a78262000362565b602082019050919050565b60006020820190508181036000830152620003cd816200038b565b9050919050565b611c2f80620003e46000396000f3fe6080604052600436106100c65760003560e01c8063763191901161007f578063af933b5711610059578063af933b5714610249578063f2fde38b14610272578063f9166de61461029b578063f9e62f58146102c4576100cd565b806376319190146101cc5780638522d1b2146101f55780638da5cb5b1461021e576100cd565b80630153b48f146100d257806344004cc1146100fd57806368c4ac261461012657806369cbd6cf146101635780636d69fcaf1461018c578063715018a6146101b5576100cd565b366100cd57005b600080fd5b3480156100de57600080fd5b506100e76102ef565b6040516100f491906111fc565b60405180910390f35b34801561010957600080fd5b50610124600480360381019061011f9190611283565b610315565b005b34801561013257600080fd5b5061014d600480360381019061014891906112d6565b6103d2565b60405161015a919061131e565b60405180910390f35b34801561016f57600080fd5b5061018a600480360381019061018591906112d6565b6103f2565b005b34801561019857600080fd5b506101b360048036038101906101ae91906112d6565b6104f0565b005b3480156101c157600080fd5b506101ca610605565b005b3480156101d857600080fd5b506101f360048036038101906101ee91906112d6565b610619565b005b34801561020157600080fd5b5061021c60048036038101906102179190611339565b6106bf565b005b34801561022a57600080fd5b506102336108e6565b60405161024091906111fc565b60405180910390f35b34801561025557600080fd5b50610270600480360381019061026b91906113ca565b61090f565b005b34801561027e57600080fd5b50610299600480360381019061029491906112d6565b610a8f565b005b3480156102a757600080fd5b506102c260048036038101906102bd9190611498565b610b15565b005b3480156102d057600080fd5b506102d9610e50565b6040516102e69190611591565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61031d610e76565b610325610efd565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b90611609565b60405180910390fd5b60008390506103c483838373ffffffffffffffffffffffffffffffffffffffff16610f439092919063ffffffff16565b506103cd610fc2565b505050565b60046020528060005260406000206000915054906101000a900460ff1681565b6103fa610e76565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610469576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046090611675565b60405180910390fd5b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fa23a9d2188a7c0fed451a9fba07766700a713518c306b47bd7965da8d795902e60405160405180910390a250565b6104f8610e76565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610567576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161055e906116e1565b60405180910390fd5b6001600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fd1be2e90bd3d24839d9dd94ad871068e1f9688b02fa43f2a62c9975dfa9de2d760405160405180910390a250565b61060d610e76565b6106176000610fcb565b565b610621610e76565b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fbea12876694c4055c71f74308f752b9027cf3d554194000a366abddfc239a30660405160405180910390a250565b6106c7610efd565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610753576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074a9061174d565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036107c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107b990611609565b60405180910390fd5b60008211610805576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fc906117b9565b60405180910390fd5b6108323330848673ffffffffffffffffffffffffffffffffffffffff1661108f909392919063ffffffff16565b61085d81838573ffffffffffffffffffffffffffffffffffffffff16610f439092919063ffffffff16565b8273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f46910aaaa30ec32e395eb5c0ca67d8a26f2d43b94b90ec338da62f29c024e49f856040516108d191906117e8565b60405180910390a46108e1610fc2565b505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610917610e76565b61091f610efd565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361098e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161098590611609565b60405180910390fd5b6000479050600081116109d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109cd9061184f565b60405180910390fd5b60008273ffffffffffffffffffffffffffffffffffffffff16826040516109fc906118a0565b60006040518083038185875af1925050503d8060008114610a39576040519150601f19603f3d011682016040523d82523d6000602084013e610a3e565b606091505b5050905080610a82576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7990611901565b60405180910390fd5b5050610a8c610fc2565b50565b610a97610e76565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b095760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610b0091906111fc565b60405180910390fd5b610b1281610fcb565b50565b610b1d610efd565b600460008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16610ba9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ba090611993565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1603610c18576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c0f90611a25565b60405180910390fd5b60008411610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c52906117b9565b60405180910390fd5b610c883330868973ffffffffffffffffffffffffffffffffffffffff1661108f909392919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16866040518363ffffffff1660e01b8152600401610ce5929190611a45565b6020604051808303816000875af1158015610d04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d289190611a9a565b50600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a3a795488787878787876040518763ffffffff1660e01b8152600401610d8e96959493929190611b34565b600060405180830381600087803b158015610da857600080fd5b505af1158015610dbc573d6000803e3d6000fd5b505050503373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f5166ae0f35839f1ac0e2191a71c41c00be7c469f2fd148a48f03acf3958b52a9878686604051610e3893929190611b90565b60405180910390a4610e48610fc2565b505050505050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610e7e611111565b73ffffffffffffffffffffffffffffffffffffffff16610e9c6108e6565b73ffffffffffffffffffffffffffffffffffffffff1614610efb57610ebf611111565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ef291906111fc565b60405180910390fd5b565b600260015403610f39576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b610fbd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401610f76929190611a45565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611119565b505050565b60018081905550565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61110b848573ffffffffffffffffffffffffffffffffffffffff166323b872dd8686866040516024016110c493929190611bc2565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611119565b50505050565b600033905090565b600080602060008451602086016000885af18061113c576040513d6000823e3d81fd5b3d925060005191505060008214611157576001811415611173565b60008473ffffffffffffffffffffffffffffffffffffffff163b145b156111b557836040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016111ac91906111fc565b60405180910390fd5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111e6826111bb565b9050919050565b6111f6816111db565b82525050565b600060208201905061121160008301846111ed565b92915050565b600080fd5b600080fd5b61122a816111db565b811461123557600080fd5b50565b60008135905061124781611221565b92915050565b6000819050919050565b6112608161124d565b811461126b57600080fd5b50565b60008135905061127d81611257565b92915050565b60008060006060848603121561129c5761129b611217565b5b60006112aa86828701611238565b93505060206112bb86828701611238565b92505060406112cc8682870161126e565b9150509250925092565b6000602082840312156112ec576112eb611217565b5b60006112fa84828501611238565b91505092915050565b60008115159050919050565b61131881611303565b82525050565b6000602082019050611333600083018461130f565b92915050565b60008060006060848603121561135257611351611217565b5b600061136086828701611238565b93505060206113718682870161126e565b925050604061138286828701611238565b9150509250925092565b6000611397826111bb565b9050919050565b6113a78161138c565b81146113b257600080fd5b50565b6000813590506113c48161139e565b92915050565b6000602082840312156113e0576113df611217565b5b60006113ee848285016113b5565b91505092915050565b600063ffffffff82169050919050565b611410816113f7565b811461141b57600080fd5b50565b60008135905061142d81611407565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261145857611457611433565b5b8235905067ffffffffffffffff81111561147557611474611438565b5b6020830191508360018202830111156114915761149061143d565b5b9250929050565b60008060008060008060a087890312156114b5576114b4611217565b5b60006114c389828a01611238565b96505060206114d489828a01611238565b95505060406114e589828a0161126e565b94505060606114f689828a0161141e565b935050608087013567ffffffffffffffff8111156115175761151661121c565b5b61152389828a01611442565b92509250509295509295509295565b6000819050919050565b600061155761155261154d846111bb565b611532565b6111bb565b9050919050565b60006115698261153c565b9050919050565b600061157b8261155e565b9050919050565b61158b81611570565b82525050565b60006020820190506115a66000830184611582565b92915050565b600082825260208201905092915050565b7f526563697069656e742063616e6e6f74206265207a65726f2061646472657373600082015250565b60006115f36020836115ac565b91506115fe826115bd565b602082019050919050565b60006020820190508181036000830152611622816115e6565b9050919050565b7f42726964676520616464726573732063616e6e6f74206265207a65726f000000600082015250565b600061165f601d836115ac565b915061166a82611629565b602082019050919050565b6000602082019050818103600083015261168e81611652565b9050919050565b7f546f6b656e2063616e6e6f74206265207a65726f206164647265737300000000600082015250565b60006116cb601c836115ac565b91506116d682611695565b602082019050919050565b600060208201905081810360008301526116fa816116be565b9050919050565b7f546f6b656e206e6f7420737570706f7274656420666f72204c322073656e6400600082015250565b6000611737601f836115ac565b915061174282611701565b602082019050919050565b600060208201905081810360008301526117668161172a565b9050919050565b7f416d6f756e74206d7573742062652067726561746572207468616e207a65726f600082015250565b60006117a36020836115ac565b91506117ae8261176d565b602082019050919050565b600060208201905081810360008301526117d281611796565b9050919050565b6117e28161124d565b82525050565b60006020820190506117fd60008301846117d9565b92915050565b7f4e6f20457468657220746f207769746864726177000000000000000000000000600082015250565b60006118396014836115ac565b915061184482611803565b602082019050919050565b600060208201905081810360008301526118688161182c565b9050919050565b600081905092915050565b50565b600061188a60008361186f565b91506118958261187a565b600082019050919050565b60006118ab8261187d565b9150819050919050565b7f4574686572207472616e73666572206661696c65640000000000000000000000600082015250565b60006118eb6015836115ac565b91506118f6826118b5565b602082019050919050565b6000602082019050818103600083015261191a816118de565b9050919050565b7f546f6b656e206e6f7420737570706f7274656420666f72204c3120776974686460008201527f726177616c000000000000000000000000000000000000000000000000000000602082015250565b600061197d6025836115ac565b915061198882611921565b604082019050919050565b600060208201905081810360008301526119ac81611970565b9050919050565b7f4c3120726563697069656e742063616e6e6f74206265207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611a0f6023836115ac565b9150611a1a826119b3565b604082019050919050565b60006020820190508181036000830152611a3e81611a02565b9050919050565b6000604082019050611a5a60008301856111ed565b611a6760208301846117d9565b9392505050565b611a7781611303565b8114611a8257600080fd5b50565b600081519050611a9481611a6e565b92915050565b600060208284031215611ab057611aaf611217565b5b6000611abe84828501611a85565b91505092915050565b611ad0816113f7565b82525050565b600082825260208201905092915050565b82818337600083830152505050565b6000601f19601f8301169050919050565b6000611b138385611ad6565b9350611b20838584611ae7565b611b2983611af6565b840190509392505050565b600060a082019050611b4960008301896111ed565b611b5660208301886111ed565b611b6360408301876117d9565b611b706060830186611ac7565b8181036080830152611b83818486611b07565b9050979650505050505050565b6000604082019050611ba560008301866117d9565b8181036020830152611bb8818486611b07565b9050949350505050565b6000606082019050611bd760008301866111ed565b611be460208301856111ed565b611bf160408301846117d9565b94935050505056fea2646970667358221220a27f108c8793673b2c595f32993a8cb9e7d88a541629f41b4abfa020c320410564736f6c63430008140033";

type SchnellFundSenderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SchnellFundSenderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SchnellFundSender__factory extends ContractFactory {
  constructor(...args: SchnellFundSenderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _initialL2StandardBridgeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _initialL2StandardBridgeAddress,
      overrides || {}
    );
  }
  override deploy(
    _initialL2StandardBridgeAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _initialL2StandardBridgeAddress,
      overrides || {}
    ) as Promise<
      SchnellFundSender & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): SchnellFundSender__factory {
    return super.connect(runner) as SchnellFundSender__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SchnellFundSenderInterface {
    return new Interface(_abi) as SchnellFundSenderInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): SchnellFundSender {
    return new Contract(address, _abi, runner) as unknown as SchnellFundSender;
  }
}
